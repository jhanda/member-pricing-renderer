<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<liferay-portlet:actionURL name="checkCPInstance" portletName="com_liferay_commerce_product_content_web_internal_portlet_CPContentPortlet" var="checkCPInstanceURL">
    <portlet:param name="cpDefinitionId" value="<%= String.valueOf(cpDefinitionId) %>" />
    <portlet:param name="groupId" value="<%= String.valueOf(themeDisplay.getScopeGroupId()) %>" />
</liferay-portlet:actionURL>

<aui:script require="commerce-frontend-js/utilities/eventsDefinitions as eventsDefinitions, commerce-frontend-js/utilities/forms/DDMFormHandler as DDMFormHandler">
    var cpDefinitionId = <%= cpDefinitionId %>;
    var CP_CONTENT_WEB_PORTLET_KEY =
    'com_liferay_commerce_product_content_web_internal_portlet_CPContentPortlet';

    function initialiseOrderDetails() {
    var addToCartButton = Liferay.component('<%= addToCartId %>');

    if (addToCartButton) {
    addToCartButton.disabled = true;
    }
    }

    function updateAddToCart(cpInstance, formValues) {
    var productExists = cpInstance.cpInstanceExist;
    var cpInstanceId = cpInstance.cpInstanceId;

    Liferay.fire(
    eventsDefinitions.CURRENT_PRODUCT_STATUS_CHANGED,
    productExists
    ? {
    addToCartId: '<%= addToCartId %>',
    productId: cpInstanceId,
    options: JSON.stringify(formValues),
    quantity: 0,
    settings: {
    maxQuantity: 1000,
    minQuantity: 1,
    multipleQuantities: 1,
    },
    }
    : {
    addToCartId: '<%= addToCartId %>',
    productId: null,
    }
    );
    }

    function updateGallery(formFields) {
    var formData = new FormData();
    formData.append(
    '<portlet:namespace />ddmFormValues',
    JSON.stringify(formFields)
    );
    formData.append('groupId', themeDisplay.getScopeGroupId());

    fetch(
    '<%= String.valueOf(cpContentHelper.getViewAttachmentURL(liferayPortletRequest, liferayPortletResponse)) %>',
    {
    body: formData,
    credentials: 'include',
    headers: new Headers({'x-csrf-token': Liferay.authToken}),
    method: 'post',
    }
    )
    .then(function (response) {
    return response.json();
    })
    .then(function (response) {
    var images = response.map(function (image) {
    return {
    thumbnailUrl: image.url,
    url: image.url,
    title: '',
    };
    });
    Liferay.fire(eventsDefinitions.PRODUCT_OPTIONS_CHANGED, {
    images: images,
    });
    });
    }

    function updateProductFields(productData) {
    document.querySelector('[data-text-cp-instance-sku]').innerHTML =
    Liferay.Util.escape(productData.sku) || '';
    document.querySelector(
    '[data-text-cp-instance-manufacturer-part-number]'
    ).innerHTML = Liferay.Util.escape(productData.manufacturerPartNumber) || '';
    document.querySelector('[data-text-cp-instance-gtin]').innerHTML =
    Liferay.Util.escape(productData.gtin) || '';

    var availabilityEstimateContainer = document.querySelector(
    '[data-text-cp-instance-availability-estimate]'
    );
    var availabilityContainer = document.querySelector(
    '[data-text-cp-instance-availability]'
    );
    var stockQuantityContainer = document.querySelector(
    '[data-text-cp-instance-stock-quantity]'
    );

    if (
    availabilityEstimateContainer &&
    availabilityContainer &&
    stockQuantityContainer
    ) {
    availabilityContainer.innerHTML = productData.availability || '';
    availabilityEstimateContainer.innerHTML =
    productData.availabilityEstimate || '';
    stockQuantityContainer.innerHTML = productData.stockQuantity || '';
    }

    document.querySelector(
    '[data-text-cp-instance-subscription-info]'
    ).innerHTML = productData.subscriptionInfo || '';
    document.querySelector(
    '[data-text-cp-instance-delivery-subscription-info]'
    ).innerHTML = productData.deliverySubscriptionInfo || '';

    Liferay.fire('priceUpdated', {
    displayDiscountLevels: productData.displayDiscountLevels,
    id: '<%= "productDetail_" + cpCatalogEntry.getCPDefinitionId() %>',
    prices: productData.prices,
    });
    }

    function updateView(productsData) {
    var cpInstance = productsData.cpInstance;
    var formFields = productsData.formFields;

    updateAddToCart(cpInstance, formFields);
    updateGallery(formFields);
    updateProductFields(cpInstance);
    }

    Liferay.componentReady('ProductOptions' + cpDefinitionId).then(function (
    DDMFormInstance
    ) {
    initialiseOrderDetails();

    if (DDMFormInstance) {
    var FormHandler = DDMFormHandler.default;

    var FormHandlerConfiguration = {
    actionURL: '<%= checkCPInstanceURL %>',
    addToCartId: '<%= addToCartId %>',
    cpDefinitionId: '<%= cpDefinitionId %>',
    DDMFormInstance: DDMFormInstance,
    portletId: CP_CONTENT_WEB_PORTLET_KEY,
    };

    new FormHandler(FormHandlerConfiguration);

    Liferay.on(eventsDefinitions.CP_INSTANCE_CHANGED, updateView);
    }
    });
</aui:script>